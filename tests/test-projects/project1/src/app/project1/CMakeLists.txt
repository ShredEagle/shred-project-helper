set(TARGET_NAME grapito)


set(AUTOGEN_DISCLAIMER "/* WARNING: Autogenerated file, do not edit. All changes will be lost. */")
set(REPO_FOLDER ${PROJECT_SOURCE_DIR})


set(${TARGET_NAME}_HEADERS
)

set(${TARGET_NAME}_SOURCES
    main.cpp
)


if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    LIST(APPEND ${TARGET_NAME}_HEADERS
        Windows/Console.h)

    LIST(APPEND ${TARGET_NAME}_SOURCES
        Windows/appicon.rc)
endif()


source_group(TREE ${CMAKE_CURRENT_LIST_DIR}
             FILES ${${TARGET_NAME}_HEADERS} ${${TARGET_NAME}_SOURCES}
)


find_package(Project3 CONFIG REQUIRED COMPONENTS project3)
find_package(Project2 CONFIG REQUIRED COMPONENTS project2)

# Use the "Console" subsystem for development builds, so the console window does not close on exit.
# (Note: we explicitly attach a console in code when the subsystem is "Windows")
if(NOT BUILD_Grapito_DEVMODE)
    set(WINDOWS_SUBSYSTEM WIN32)
endif()

add_executable(${TARGET_NAME}
    ${WINDOWS_SUBSYSTEM}

    ${${TARGET_NAME}_SOURCES}
    ${${TARGET_NAME}_HEADERS}
)

if(NOT CMAKE_SYSTEM_NAME STREQUAL "Windows")
    target_compile_options(${TARGET_NAME}
        PRIVATE "-g" "-O3")
    target_compile_options(${TARGET_NAME}
        PRIVATE "-fsanitize=leak" "-Wall" "-Wextra" "-fsanitize=address" "-fsanitize=undefined")
    target_link_options(${TARGET_NAME}
        PRIVATE "-fsanitize=address" "-fsanitize=leak" "-fsanitize=undefined")
endif()

# TODO Change to positive definition of BUILD_DEVMODE macro instead.
if(NOT BUILD_Grapito_DEVMODE)
    target_compile_definitions(${TARGET_NAME} PRIVATE BUILD_RELEASEMODE)
endif()

target_include_directories(${TARGET_NAME}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}
            ${PROJECT_BINARY_DIR}/imgui_backends
            $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> # For generated header
)

target_link_libraries(${TARGET_NAME}
    PRIVATE
        sph::project2
        sph::project3
)


set_target_properties(${TARGET_NAME} PROPERTIES
                      VERSION "${BUILD_VERSION}"
)

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    # Tell MSVC to use main instead of WinMain for Windows subsystem executables.
    # This way we do not have to define different entrypoints depending on the target OS.
    set_target_properties(${TARGET_NAME} PROPERTIES
                          LINK_FLAGS "/ENTRY:mainCRTStartup")
endif()


##
## Install
##

install(TARGETS ${TARGET_NAME})

