set(TARGET_NAME project1)


set(AUTOGEN_DISCLAIMER "/* WARNING: Autogenerated file, do not edit. All changes will be lost. */")
set(REPO_FOLDER ${PROJECT_SOURCE_DIR})

set(${TARGET_NAME}_SOURCES
    main.cpp
)

source_group(TREE ${CMAKE_CURRENT_LIST_DIR}
             FILES ${${TARGET_NAME}_HEADERS} ${${TARGET_NAME}_SOURCES}
)


find_package(project3 CONFIG REQUIRED COMPONENTS project3)
find_package(project2 CONFIG REQUIRED COMPONENTS project2)
find_package(Boost REQUIRED COMPONENTS program_options)

add_executable(${TARGET_NAME}
    ${${TARGET_NAME}_SOURCES}
)

if(NOT CMAKE_SYSTEM_NAME STREQUAL "Windows")
    target_compile_options(${TARGET_NAME}
        PRIVATE "-g" "-O3")
    target_compile_options(${TARGET_NAME}
        PRIVATE "-fsanitize=leak" "-Wall" "-Wextra" "-fsanitize=address" "-fsanitize=undefined")
    target_link_options(${TARGET_NAME}
        PRIVATE "-fsanitize=address" "-fsanitize=leak" "-fsanitize=undefined")
endif()

# TODO Change to positive definition of BUILD_DEVMODE macro instead.
if(NOT BUILD_Grapito_DEVMODE)
    target_compile_definitions(${TARGET_NAME} PRIVATE BUILD_RELEASEMODE)
endif()

target_include_directories(${TARGET_NAME}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}
            $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}> # For generated header
)

target_link_libraries(${TARGET_NAME}
    PRIVATE
        sph::project2
        sph::project3

        Boost::boost
)


set_target_properties(${TARGET_NAME} PROPERTIES
                      VERSION "${BUILD_VERSION}"
)

##
## Install
##

install(TARGETS ${TARGET_NAME})
